{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	/**
		BASE
	*/
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},

	/**
		THENJS
	*/
	"Then Thenjs": {
		"prefix": "thenj",
		"body": [
			"Thenjs(cont => {",
			"\t$1",
			"})"
		],
		"description": "start Thenjs"
	},
	"Then then": {
		"prefix": "thent",
		"body": [
			".then((cont, arg) => {",
			"\t$1",
			"})"
		],
		"description": "Thenjs then"
	},
	"Then fin": {
		"prefix": "thenf",
		"body": [
			".fin((cont, err, arg) => {",
			"\tif (err) return callback(err, null);",
			"\treturn callback(null, $1);",
			"});"
		],
		"description": "Thenjs then"
	},
	"error": {
		"prefix": "er",
		"body": [
			"(err, result) => {",
			"\tif (err) return cont(err, null);",
			"\t$1",
			"\tcont(null, null);",
			"};"
		],
		"description": "error in callback"
	},
}
